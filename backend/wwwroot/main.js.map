{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs/internal/observable/throwError';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = 'http://localhost:5000/api/auth/';\n  userToken: any;\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http\n      .post(this.baseUrl + 'login', model, this.requestOptions())\n      .pipe(\n        map(response => {\n          const user: User = response as User;\n          if (user) {\n            localStorage.setItem('token', user.tstring);\n            this.userToken = user.tstring;\n          }\n        }),catchError(this.handleError)\n      );\n  }\n\n  reigster(model: any) {\n    return this.http.post(\n      this.baseUrl + 'register',\n      model,\n      this.requestOptions()\n    ).pipe(catchError(this.handleError));\n  }\n\n  requestOptions() {\n    return {\n      headers: new HttpHeaders({ 'Content-type': 'application/json' })\n    };\n  }\n\n  private handleError(errorResponse: HttpErrorResponse) {\n    const applicationError = errorResponse.headers.get('Application-Error');\n    if (applicationError) {\n      return throwError(applicationError);\n    }\n    const serverError = errorResponse.error;\n    if (serverError) {\n      let modelStateError = '';\n      for (const key in serverError) {\n        if (serverError[key]) {\n          modelStateError += serverError[key] + '';\n        }\n      }\n      return throwError(modelStateError || 'Server Error');\n    }\n    return throwError(errorResponse.message); }\n\n}\nexport class User {\n  tstring: any;\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n<app-home></app-home>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private authService:AuthService) {}\r\n  title = 'DatingAppSPA';\r\n\r\n  ngOnInit(): void {\r\n    // this.authService.decodedToken = this.authService.jwtHelper.decodeToken(localStorage.getItem('token'));\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n// import { ValuesComponent } from './values/values.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\n\r\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent\n   ],\n   imports: [\n      HttpClientModule,\n      BrowserModule,\n      FormsModule\n   ],\n   providers: [\n      AuthService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"\\n <!-- home page html -->\\n\\n <div class=\\\"text-center\\\">\\n  <h1>Find your match</h1>\\n\\n  <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n\\n <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"regtog()\\\">Register</button>\\n\\n   <button class=\\\"btn btn-info btn-lg\\\">Learn More</button>\\n  </div>\\n</div>\\n<div *ngIf=\\\"regmod\\\" class=\\\"container\\\">\\n  <div class=\\\"col-xs-4-8  \\\">\\n    <app-register></app-register>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n  regmod=false;\n\n  ngOnInit() {\n  }\n  regtog(){this.regmod= !this.regmod;\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-primary\\\">\\r\\n  <a class=\\\"navbar-brand\\\">DatingApp</a>\\r\\n  <button class=\\\"navbar-toggler navbar-toggler-icon\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavId\\\"\\r\\n    aria-controls=\\\"collapsibleNavId\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\"></button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\">\\r\\n    <div class=\\\"mr-auto mt-2 mt-lg-0\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\">Matches</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\">Lists</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\">Messages</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-5 mt-2 mt-lg-0\\\">\\r\\n        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-in\\\"></i> Logout</a>\\r\\n\\r\\n      <li class=\\\"dropdown nav-item\\\" dropdown>\\r\\n        <a class=\\\"nav-link  dropdown-toggle\\\"  style=\\\"cursor: pointer\\\" dropdownToggle>Welcome </a>\\r\\n        <div class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n          <a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user\\\"></i> Edit profile</a>\\r\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-in\\\"></i> Logout</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" aria-label=\\\"Email\\\" name=\\\"uname\\\" required\\r\\n        [(ngModel)]=\\\"model.uname\\\" />\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" aria-label=\\\"Password\\\" name=\\\"pass\\\"\\r\\n        required [(ngModel)]=\\\"model.pass\\\" />\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">\\r\\n        Sign In\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent  {\r\n  model: any = {};\r\n  constructor(private auth: AuthService) {}\r\n\r\n\r\n  loggedIn(){\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.model).subscribe(\r\n      data => {\r\n        console.log('logged in successfuly');\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  logout(){\r\n    this.auth.userToken = null;\r\n    localStorage.removeItem('token');\r\n    console.log('logged out');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\n\\n<!-- register page html -->\\n\\n<form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n\\n  <hr>\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Username\\\" name=\\\"uname\\\" [(ngModel)]=\\\"model.uname\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" required placeholder=\\\"Password\\\"   name=\\\"pass\\\"   [(ngModel)]=\\\"model.pass\\\">\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  model: any = {};\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n  }\n  register() {\n\n    this.auth.reigster(this.model).subscribe(() => {\n      console.log('register succesfully');\n    }, error => { console.log(error); }\n    );\n  }\n  cancel() { console.log('cacelled'); }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}